# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

pool:
  vmImage: ubuntu-latest

steps:
- task: TerraformInstaller@0
  displayName: terraformInstall
  inputs:
    terraformVersion: 'latest'

- task: TerraformTaskV3@3
  displayName: terraformInit
  inputs:
    provider: 'azurerm'
    command: 'init'
    backendServiceArm: 'Azure Rm Connect'
    backendAzureRmResourceGroupName: 'sa1_test_eic_trainingSahil'
    backendAzureRmStorageAccountName: 'storageaccbysahil'
    backendAzureRmContainerName: 'test'
    backendAzureRmKey: 'tf/terraform.tfstate'

- task: TerraformTaskV3@3
  displayName: terraformPlan
  inputs:
    provider: 'azurerm'
    command: 'plan'
    environmentServiceNameAzureRM: 'Azure Rm Connect'

- task: TerraformTaskV3@3
  displayName: terraformApply
  inputs:
    provider: 'azurerm'
    command: 'apply'
    environmentServiceNameAzureRM: 'Azure Rm Connect'

- task: TerraformTaskV3@3
  displayName: terraformOutput
  inputs:
    provider: 'azurerm'
    command: 'output'
    environmentServiceNameAzureRM: 'Azure Rm Connect'
